# Server config for https requests
server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;
  server_name _;
  ssl_certificate /etc/cert/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/cert/privkey.pem; # managed by Certbot
  # Client-side caching
  location ~* \.(jpg|jpeg|png|gif|ico)$ {
    expires 30d;
  }
  location ~* \.(css|js)$ {
    expires 7d;
  }

  root /app/;

  location / {
      index  index.html;
      try_files $uri $uri/ /index.html;
  }
  # Pagespeed Module
  # pagespeed on;
  # pagespeed FileCachePath /var/cache/ngx_pagespeed_cache;
  # location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
  #   add_header "" "";
  # }
  # location ~ "^/pagespeed_static/" { }
  # location ~ "^/ngx_pagespeed_beacon$" { }
  # pagespeed RewriteLevel PassThrough;
  # pagespeed EnableCachePurge on;
  # pagespeed PurgeMethod PURGE;
  # pagespeed EnableFilters prioritize_critical_css;
  # For proxy based locations
  # location /api/ {
  #   # Rate Limiting
  #   limit_req zone=addr burst=20; # Max burst of request
  #   limit_req_status 460; # Status to send
  #   # Bandwidth Limiting
  #   limit_rate 4096k; # Speed limit (here is on kb/s)
  #   # Micro caching
  #   proxy_cache microcacheapi;
  #   proxy_cache_valid 200 1s;
  #   proxy_cache_use_stale updating;
  #   proxy_cache_background_update on;
  #   proxy_cache_lock on;
  #   proxy_pass http://localhost:8080;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header Host $http_host;
  #   proxy_set_header X-NginX-Proxy true;
  # }
}
# Server redirection from http to https
# server {
#   listen 80;
#   listen [::]:80;
#   server_name example.com;
#   return 301 https://$server_name$request_uri;
# }
# Server redirection with www
# server {
#   listen 80;
#   listen [::]:80;
#   listen 443 ssl http2;
#   listen [::]:443 ssl http2;
#   server_name www.example.com;
#   ssl_certificate /path/to/cert/example.com/fullchain.pem; # managed by Certbot
#   ssl_certificate_key /path/to/cert/example.com/privkey.pem; # managed by Certbot
# }
# Server config for http requests
#server {
#  listen 80 default_server; # http2
#  listen [::]:80 default_server; # http2
#  server_name _;
#
#  # Client-side caching
#  location ~* \.(jpg|jpeg|png|gif|ico)$ {
#    expires 30d;
#  }
#  location ~* \.(css|js)$ {
#    expires 7d;
#  }
#
#  root /app/;
#
#  location / {
#      index  index.html;
#      try_files $uri $uri/ /index.html;
#  }
#}
